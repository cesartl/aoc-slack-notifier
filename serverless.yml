service: aoc-slack-notifier

provider:
  name: aws
  runtime: java11
  timeout: 20
  region: ${opt:region, 'eu-west-2'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:CreateQueue
        - sqs:DeleteMessage
        - sqs:ReceiveMessage
        - sqs:SendMessage
      Resource: arn:aws:sqs:*:*:${self:custom.sqsQueue}
#    - Effect: Allow
#      Action:
#        - SNS:Publish
#        - SNS:CreateTopic
#      Resource: { "Fn::Join": ["", ["arn:aws:sns:${self:provider.region}:", { "Ref": "AWS::AccountId" }, ":${self:custom.snsTopic}" ] ]  }
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:custom.dynamodbTable}"

custom:
#  snsTopic: "${self:service}-${self:provider.stage}-compare-event-sns"
  sqsQueue: "${self:service}-${self:provider.stage}-compare-event-sqs"
  dynamodbTable: AOC_Polling_Event

package:
  artifact: target/slack-notifier-0.0.1-SNAPSHOT-aws.jar
functions:
  polling:
    handler: com.ctl.aoc.slacknotifier.handlers.PollingHandler
    events:
      - schedule: ${opt:schedule, 'cron(0 */1 * * ? *)'}
    environment:
      FUNCTION_NAME: pollingFunction
      AOC_SESSION_ID: ${opt:sessionid}
#      SNS_TOPIC: ${self:custom.snsTopic}
      SQS_QUEUE_NAME: ${self:custom.sqsQueue}
  compare:
    handler: com.ctl.aoc.slacknotifier.handlers.CompareHandler
    environment:
      FUNCTION_NAME: compareFunction
      SLACK_TOKEN: ${opt:slackToken}
    events:
      - sqs:
          arn: { "Fn::Join": ["", ["arn:aws:sqs:${self:provider.region}:", { "Ref": "AWS::AccountId" }, ":${self:custom.sqsQueue}" ] ]  }
          batchSize: 2
#      - sns: ${self:custom.snsTopic}

resources:
  Resources:
    #    SnsTopic:
    #      Type: 'AWS::SNS::Topic'
    #      DeletionPolicy: Delete
    #      Properties:
    #        DisplayName: ${self:custom.snsTopic}
    #        TopicName: ${self:custom.snsTopic}
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqsQueue}
        MessageRetentionPeriod: 120
        VisibilityTimeout: 30

    PollingDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: identifier
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: N
        KeySchema:
          - AttributeName: identifier
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        TableName: ${self:custom.dynamodbTable}